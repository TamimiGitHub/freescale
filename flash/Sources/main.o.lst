   1              		.cpu cortex-m0
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 34, 0
  11              		.eabi_attribute 18, 4
  12              		.code	16
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.main,"ax",%progbits
  18              		.align	2
  19              		.global	main
  20              		.code	16
  21              		.thumb_func
  23              	main:
  24              	.LFB0:
  25              		.file 1 "../sources/main.c"
   1:../sources/main.c **** #include "derivative.h" /* include peripheral declarations */
   2:../sources/main.c **** #include "TFC\TFC.h"
   3:../sources/main.c **** 
   4:../sources/main.c **** int main(void)
   5:../sources/main.c **** {
  26              		.loc 1 5 0
  27              		.cfi_startproc
  28 0000 80B5     		push	{r7, lr}
  29              	.LCFI0:
  30              		.cfi_def_cfa_offset 8
  31              		.cfi_offset 7, -8
  32              		.cfi_offset 14, -4
  33 0002 D0B0     		sub	sp, sp, #320
  34              	.LCFI1:
  35              		.cfi_def_cfa_offset 328
  36 0004 00AF     		add	r7, sp, #0
  37              	.LCFI2:
  38              		.cfi_def_cfa_register 7
   6:../sources/main.c **** 	uint32_t i=0;
  39              		.loc 1 6 0
  40 0006 0023     		mov	r3, #0
  41 0008 9420     		mov	r0, #148
  42 000a 4000     		lsl	r0, r0, #1
  43 000c C019     		add	r0, r0, r7
  44 000e 0360     		str	r3, [r0]
   7:../sources/main.c **** 	//LineScanImage0;
   8:../sources/main.c **** 	int ii=0;
  45              		.loc 1 8 0
  46 0010 0023     		mov	r3, #0
  47 0012 9E21     		mov	r1, #158
  48 0014 4900     		lsl	r1, r1, #1
  49 0016 C919     		add	r1, r1, r7
  50 0018 0B60     		str	r3, [r1]
   9:../sources/main.c **** 	int deltaL, deltaR;
  10:../sources/main.c **** 	int firstLevel, secondLevel;
  11:../sources/main.c **** 	int steeringAngle;
  12:../sources/main.c **** 	int samplenum = 4;
  51              		.loc 1 12 0
  52 001a 0423     		mov	r3, #4
  53 001c 9222     		mov	r2, #146
  54 001e 5200     		lsl	r2, r2, #1
  55 0020 D219     		add	r2, r2, r7
  56 0022 1360     		str	r3, [r2]
  13:../sources/main.c **** 	int threshold=50*samplenum;
  57              		.loc 1 13 0
  58 0024 9220     		mov	r0, #146
  59 0026 4000     		lsl	r0, r0, #1
  60 0028 C019     		add	r0, r0, r7
  61 002a 0368     		ldr	r3, [r0]
  62 002c 3222     		mov	r2, #50
  63 002e 5343     		mul	r3, r2
  64 0030 9021     		mov	r1, #144
  65 0032 4900     		lsl	r1, r1, #1
  66 0034 C919     		add	r1, r1, r7
  67 0036 0B60     		str	r3, [r1]
  14:../sources/main.c **** 	int smallthreshold=50*samplenum;
  68              		.loc 1 14 0
  69 0038 9222     		mov	r2, #146
  70 003a 5200     		lsl	r2, r2, #1
  71 003c D219     		add	r2, r2, r7
  72 003e 1368     		ldr	r3, [r2]
  73 0040 3222     		mov	r2, #50
  74 0042 5343     		mul	r3, r2
  75 0044 8E20     		mov	r0, #142
  76 0046 4000     		lsl	r0, r0, #1
  77 0048 C019     		add	r0, r0, r7
  78 004a 0360     		str	r3, [r0]
  15:../sources/main.c **** 	TFC_Init();
  79              		.loc 1 15 0
  80 004c FFF7FEFF 		bl	TFC_Init
  16:../sources/main.c **** 	TFC_HBRIDGE_ENABLE;
  81              		.loc 1 16 0
  82 0050 C24B     		ldr	r3, .L28
  83 0052 8022     		mov	r2, #128
  84 0054 9203     		lsl	r2, r2, #14
  85 0056 5A60     		str	r2, [r3, #4]
  17:../sources/main.c **** 	TFC_SetPWMLookup(10,10);
  86              		.loc 1 17 0
  87 0058 0A20     		mov	r0, #10
  88 005a 0A21     		mov	r1, #10
  89 005c FFF7FEFF 		bl	TFC_SetPWMLookup
  90              	.L27:
  18:../sources/main.c **** 	
  19:../sources/main.c **** 	
  20:../sources/main.c **** 	for(;;)
  21:../sources/main.c **** 	{	   
  22:../sources/main.c **** 		//TFC_Task must be called in your main loop.  This keeps certain processing happy (I.E. Serial po
  23:../sources/main.c **** 			TFC_Task();
  91              		.loc 1 23 0
  92 0060 FFF7FEFF 		bl	TFC_Task
  24:../sources/main.c **** 
  25:../sources/main.c **** 			//This Demo program will look at the middle 2 switch to select one of 4 demo modes.
  26:../sources/main.c **** 			//Let's look at the middle 2 switches
  27:../sources/main.c **** 			switch((TFC_GetDIP_Switch()>>1)&0x03)
  93              		.loc 1 27 0
  94 0064 FFF7FEFF 		bl	TFC_GetDIP_Switch
  95              	.LBB2:
  28:../sources/main.c **** 			{
  29:../sources/main.c **** 			default:
  30:../sources/main.c **** 				ii=0;
  96              		.loc 1 30 0
  97 0068 0023     		mov	r3, #0
  98 006a 9E21     		mov	r1, #158
  99 006c 4900     		lsl	r1, r1, #1
 100 006e C919     		add	r1, r1, r7
 101 0070 0B60     		str	r3, [r1]
  31:../sources/main.c **** 				
  32:../sources/main.c **** 				uint16_t  WorkingImage[128]={0};
 102              		.loc 1 32 0
 103 0072 BB4B     		ldr	r3, .L28+4
 104 0074 A022     		mov	r2, #160
 105 0076 5200     		lsl	r2, r2, #1
 106 0078 D219     		add	r2, r2, r7
 107 007a D318     		add	r3, r2, r3
 108 007c 1A1C     		mov	r2, r3
 109 007e 8023     		mov	r3, #128
 110 0080 5B00     		lsl	r3, r3, #1
 111 0082 101C     		mov	r0, r2
 112 0084 0021     		mov	r1, #0
 113 0086 1A1C     		mov	r2, r3
 114 0088 FFF7FEFF 		bl	memset
  33:../sources/main.c **** 				int sample = 0;
 115              		.loc 1 33 0
 116 008c 0023     		mov	r3, #0
 117 008e 9820     		mov	r0, #152
 118 0090 4000     		lsl	r0, r0, #1
 119 0092 C019     		add	r0, r0, r7
 120 0094 0360     		str	r3, [r0]
  34:../sources/main.c **** 				for(;sample<3;){
 121              		.loc 1 34 0
 122 0096 44E0     		b	.L2
 123              	.L5:
  35:../sources/main.c **** 					if(LineScanImageReady){
 124              		.loc 1 35 0
 125 0098 B24B     		ldr	r3, .L28+8
 126 009a 1B78     		ldrb	r3, [r3]
 127 009c DBB2     		uxtb	r3, r3
 128 009e 002B     		cmp	r3, #0
 129 00a0 3FD0     		beq	.L2
 130              	.LBB3:
  36:../sources/main.c **** 						int j=0;
 131              		.loc 1 36 0
 132 00a2 0023     		mov	r3, #0
 133 00a4 9621     		mov	r1, #150
 134 00a6 4900     		lsl	r1, r1, #1
 135 00a8 C919     		add	r1, r1, r7
 136 00aa 0B60     		str	r3, [r1]
  37:../sources/main.c **** 						for(;j<128;j++) WorkingImage[j]+=LineScanImage0[j];
 137              		.loc 1 37 0
 138 00ac 2AE0     		b	.L3
 139              	.L4:
 140              		.loc 1 37 0 is_stmt 0
 141 00ae AC4B     		ldr	r3, .L28+4
 142 00b0 A022     		mov	r2, #160
 143 00b2 5200     		lsl	r2, r2, #1
 144 00b4 D219     		add	r2, r2, r7
 145 00b6 D318     		add	r3, r2, r3
 146 00b8 9620     		mov	r0, #150
 147 00ba 4000     		lsl	r0, r0, #1
 148 00bc C019     		add	r0, r0, r7
 149 00be 0268     		ldr	r2, [r0]
 150 00c0 5200     		lsl	r2, r2, #1
 151 00c2 D25A     		ldrh	r2, [r2, r3]
 152 00c4 A84B     		ldr	r3, .L28+12
 153 00c6 1968     		ldr	r1, [r3]
 154 00c8 9620     		mov	r0, #150
 155 00ca 4000     		lsl	r0, r0, #1
 156 00cc C019     		add	r0, r0, r7
 157 00ce 0368     		ldr	r3, [r0]
 158 00d0 5B00     		lsl	r3, r3, #1
 159 00d2 CB18     		add	r3, r1, r3
 160 00d4 1B88     		ldrh	r3, [r3]
 161 00d6 9BB2     		uxth	r3, r3
 162 00d8 D318     		add	r3, r2, r3
 163 00da 99B2     		uxth	r1, r3
 164 00dc A04B     		ldr	r3, .L28+4
 165 00de A022     		mov	r2, #160
 166 00e0 5200     		lsl	r2, r2, #1
 167 00e2 D219     		add	r2, r2, r7
 168 00e4 D318     		add	r3, r2, r3
 169 00e6 9620     		mov	r0, #150
 170 00e8 4000     		lsl	r0, r0, #1
 171 00ea C019     		add	r0, r0, r7
 172 00ec 0268     		ldr	r2, [r0]
 173 00ee 5200     		lsl	r2, r2, #1
 174 00f0 D152     		strh	r1, [r2, r3]
 175 00f2 9621     		mov	r1, #150
 176 00f4 4900     		lsl	r1, r1, #1
 177 00f6 C919     		add	r1, r1, r7
 178 00f8 0B68     		ldr	r3, [r1]
 179 00fa 0133     		add	r3, r3, #1
 180 00fc 9622     		mov	r2, #150
 181 00fe 5200     		lsl	r2, r2, #1
 182 0100 D219     		add	r2, r2, r7
 183 0102 1360     		str	r3, [r2]
 184              	.L3:
 185              		.loc 1 37 0
 186 0104 9620     		mov	r0, #150
 187 0106 4000     		lsl	r0, r0, #1
 188 0108 C019     		add	r0, r0, r7
 189 010a 0368     		ldr	r3, [r0]
 190 010c 7F2B     		cmp	r3, #127
 191 010e CEDD     		ble	.L4
  38:../sources/main.c **** 						sample++;
 192              		.loc 1 38 0 is_stmt 1
 193 0110 9821     		mov	r1, #152
 194 0112 4900     		lsl	r1, r1, #1
 195 0114 C919     		add	r1, r1, r7
 196 0116 0B68     		ldr	r3, [r1]
 197 0118 0133     		add	r3, r3, #1
 198 011a 9822     		mov	r2, #152
 199 011c 5200     		lsl	r2, r2, #1
 200 011e D219     		add	r2, r2, r7
 201 0120 1360     		str	r3, [r2]
 202              	.L2:
 203              	.LBE3:
  34:../sources/main.c **** 				for(;sample<3;){
 204              		.loc 1 34 0
 205 0122 9820     		mov	r0, #152
 206 0124 4000     		lsl	r0, r0, #1
 207 0126 C019     		add	r0, r0, r7
 208 0128 0368     		ldr	r3, [r0]
 209 012a 022B     		cmp	r3, #2
 210 012c B4DD     		ble	.L5
  39:../sources/main.c **** 					}
  40:../sources/main.c **** 					
  41:../sources/main.c **** 				}
  42:../sources/main.c **** 									
  43:../sources/main.c **** 				
  44:../sources/main.c **** 			int L1, L2, R1, R2;				
  45:../sources/main.c **** 				for(;ii<=50; ii++){
 211              		.loc 1 45 0
 212 012e 49E2     		b	.L6
 213              	.L26:
  46:../sources/main.c **** 					L1 = WorkingImage[63-ii];
 214              		.loc 1 46 0
 215 0130 9E21     		mov	r1, #158
 216 0132 4900     		lsl	r1, r1, #1
 217 0134 C919     		add	r1, r1, r7
 218 0136 0B68     		ldr	r3, [r1]
 219 0138 3F22     		mov	r2, #63
 220 013a D21A     		sub	r2, r2, r3
 221 013c 884B     		ldr	r3, .L28+4
 222 013e A020     		mov	r0, #160
 223 0140 4000     		lsl	r0, r0, #1
 224 0142 C019     		add	r0, r0, r7
 225 0144 C318     		add	r3, r0, r3
 226 0146 5200     		lsl	r2, r2, #1
 227 0148 D35A     		ldrh	r3, [r2, r3]
 228 014a 8C21     		mov	r1, #140
 229 014c 4900     		lsl	r1, r1, #1
 230 014e C919     		add	r1, r1, r7
 231 0150 0B60     		str	r3, [r1]
  47:../sources/main.c **** 					L2 = WorkingImage[62-ii];
 232              		.loc 1 47 0
 233 0152 9E22     		mov	r2, #158
 234 0154 5200     		lsl	r2, r2, #1
 235 0156 D219     		add	r2, r2, r7
 236 0158 1368     		ldr	r3, [r2]
 237 015a 3E22     		mov	r2, #62
 238 015c D21A     		sub	r2, r2, r3
 239 015e 804B     		ldr	r3, .L28+4
 240 0160 A020     		mov	r0, #160
 241 0162 4000     		lsl	r0, r0, #1
 242 0164 C019     		add	r0, r0, r7
 243 0166 C318     		add	r3, r0, r3
 244 0168 5200     		lsl	r2, r2, #1
 245 016a D35A     		ldrh	r3, [r2, r3]
 246 016c 8A21     		mov	r1, #138
 247 016e 4900     		lsl	r1, r1, #1
 248 0170 C919     		add	r1, r1, r7
 249 0172 0B60     		str	r3, [r1]
  48:../sources/main.c **** 					R1 = WorkingImage[64+ii];
 250              		.loc 1 48 0
 251 0174 9E22     		mov	r2, #158
 252 0176 5200     		lsl	r2, r2, #1
 253 0178 D219     		add	r2, r2, r7
 254 017a 1368     		ldr	r3, [r2]
 255 017c 1A1C     		mov	r2, r3
 256 017e 4032     		add	r2, r2, #64
 257 0180 774B     		ldr	r3, .L28+4
 258 0182 A020     		mov	r0, #160
 259 0184 4000     		lsl	r0, r0, #1
 260 0186 C019     		add	r0, r0, r7
 261 0188 C318     		add	r3, r0, r3
 262 018a 5200     		lsl	r2, r2, #1
 263 018c D35A     		ldrh	r3, [r2, r3]
 264 018e 8821     		mov	r1, #136
 265 0190 4900     		lsl	r1, r1, #1
 266 0192 C919     		add	r1, r1, r7
 267 0194 0B60     		str	r3, [r1]
  49:../sources/main.c **** 					R2 = WorkingImage[65+ii];
 268              		.loc 1 49 0
 269 0196 9E22     		mov	r2, #158
 270 0198 5200     		lsl	r2, r2, #1
 271 019a D219     		add	r2, r2, r7
 272 019c 1368     		ldr	r3, [r2]
 273 019e 1A1C     		mov	r2, r3
 274 01a0 4132     		add	r2, r2, #65
 275 01a2 6F4B     		ldr	r3, .L28+4
 276 01a4 A020     		mov	r0, #160
 277 01a6 4000     		lsl	r0, r0, #1
 278 01a8 C019     		add	r0, r0, r7
 279 01aa C318     		add	r3, r0, r3
 280 01ac 5200     		lsl	r2, r2, #1
 281 01ae D35A     		ldrh	r3, [r2, r3]
 282 01b0 8621     		mov	r1, #134
 283 01b2 4900     		lsl	r1, r1, #1
 284 01b4 C919     		add	r1, r1, r7
 285 01b6 0B60     		str	r3, [r1]
  50:../sources/main.c **** 					deltaL = WorkingImage[63-ii] - WorkingImage[62-ii];
 286              		.loc 1 50 0
 287 01b8 9E22     		mov	r2, #158
 288 01ba 5200     		lsl	r2, r2, #1
 289 01bc D219     		add	r2, r2, r7
 290 01be 1368     		ldr	r3, [r2]
 291 01c0 3F22     		mov	r2, #63
 292 01c2 D21A     		sub	r2, r2, r3
 293 01c4 664B     		ldr	r3, .L28+4
 294 01c6 A020     		mov	r0, #160
 295 01c8 4000     		lsl	r0, r0, #1
 296 01ca C019     		add	r0, r0, r7
 297 01cc C318     		add	r3, r0, r3
 298 01ce 5200     		lsl	r2, r2, #1
 299 01d0 D35A     		ldrh	r3, [r2, r3]
 300 01d2 1A1C     		mov	r2, r3
 301 01d4 9E21     		mov	r1, #158
 302 01d6 4900     		lsl	r1, r1, #1
 303 01d8 C919     		add	r1, r1, r7
 304 01da 0B68     		ldr	r3, [r1]
 305 01dc 3E21     		mov	r1, #62
 306 01de C91A     		sub	r1, r1, r3
 307 01e0 5F4B     		ldr	r3, .L28+4
 308 01e2 A020     		mov	r0, #160
 309 01e4 4000     		lsl	r0, r0, #1
 310 01e6 C019     		add	r0, r0, r7
 311 01e8 C318     		add	r3, r0, r3
 312 01ea 4900     		lsl	r1, r1, #1
 313 01ec CB5A     		ldrh	r3, [r1, r3]
 314 01ee D31A     		sub	r3, r2, r3
 315 01f0 9C21     		mov	r1, #156
 316 01f2 4900     		lsl	r1, r1, #1
 317 01f4 C919     		add	r1, r1, r7
 318 01f6 0B60     		str	r3, [r1]
  51:../sources/main.c **** 					deltaR = WorkingImage[64+ii] - WorkingImage[65+ii];
 319              		.loc 1 51 0
 320 01f8 9E22     		mov	r2, #158
 321 01fa 5200     		lsl	r2, r2, #1
 322 01fc D219     		add	r2, r2, r7
 323 01fe 1368     		ldr	r3, [r2]
 324 0200 1A1C     		mov	r2, r3
 325 0202 4032     		add	r2, r2, #64
 326 0204 564B     		ldr	r3, .L28+4
 327 0206 A020     		mov	r0, #160
 328 0208 4000     		lsl	r0, r0, #1
 329 020a C019     		add	r0, r0, r7
 330 020c C318     		add	r3, r0, r3
 331 020e 5200     		lsl	r2, r2, #1
 332 0210 D35A     		ldrh	r3, [r2, r3]
 333 0212 1A1C     		mov	r2, r3
 334 0214 9E21     		mov	r1, #158
 335 0216 4900     		lsl	r1, r1, #1
 336 0218 C919     		add	r1, r1, r7
 337 021a 0B68     		ldr	r3, [r1]
 338 021c 191C     		mov	r1, r3
 339 021e 4131     		add	r1, r1, #65
 340 0220 4F4B     		ldr	r3, .L28+4
 341 0222 A020     		mov	r0, #160
 342 0224 4000     		lsl	r0, r0, #1
 343 0226 C019     		add	r0, r0, r7
 344 0228 C318     		add	r3, r0, r3
 345 022a 4900     		lsl	r1, r1, #1
 346 022c CB5A     		ldrh	r3, [r1, r3]
 347 022e D31A     		sub	r3, r2, r3
 348 0230 9A21     		mov	r1, #154
 349 0232 4900     		lsl	r1, r1, #1
 350 0234 C919     		add	r1, r1, r7
 351 0236 0B60     		str	r3, [r1]
  52:../sources/main.c **** 					
  53:../sources/main.c **** 					if(deltaL<-threshold||deltaR<-threshold){
 352              		.loc 1 53 0
 353 0238 9022     		mov	r2, #144
 354 023a 5200     		lsl	r2, r2, #1
 355 023c D219     		add	r2, r2, r7
 356 023e 1368     		ldr	r3, [r2]
 357 0240 5A42     		neg	r2, r3
 358 0242 9C20     		mov	r0, #156
 359 0244 4000     		lsl	r0, r0, #1
 360 0246 C019     		add	r0, r0, r7
 361 0248 0368     		ldr	r3, [r0]
 362 024a 9A42     		cmp	r2, r3
 363 024c 0ADC     		bgt	.L7
 364              		.loc 1 53 0 is_stmt 0
 365 024e 9021     		mov	r1, #144
 366 0250 4900     		lsl	r1, r1, #1
 367 0252 C919     		add	r1, r1, r7
 368 0254 0B68     		ldr	r3, [r1]
 369 0256 5A42     		neg	r2, r3
 370 0258 9A20     		mov	r0, #154
 371 025a 4000     		lsl	r0, r0, #1
 372 025c C019     		add	r0, r0, r7
 373 025e 0368     		ldr	r3, [r0]
 374 0260 9A42     		cmp	r2, r3
 375 0262 07DD     		ble	.L8
 376              	.L7:
  54:../sources/main.c **** 						//car continues straight(may want to adjust this later to be more accurate)
  55:../sources/main.c **** 						steeringAngle = 0;
 377              		.loc 1 55 0 is_stmt 1
 378 0264 0023     		mov	r3, #0
 379 0266 791C     		add	r1, r7, #1
 380 0268 FF31     		add	r1, r1, #255
 381 026a 0B60     		str	r3, [r1]
  56:../sources/main.c **** 						TFC_SetServoLookup(0);// straight line to servos
 382              		.loc 1 56 0
 383 026c 0020     		mov	r0, #0
 384 026e FFF7FEFF 		bl	TFC_SetServoLookup
  57:../sources/main.c **** 						break;
 385              		.loc 1 57 0
 386 0272 AEE1     		b	.L9
 387              	.L8:
  58:../sources/main.c **** 					}
  59:../sources/main.c **** 					//where first derivative drop found on leftside
  60:../sources/main.c **** 					
  61:../sources/main.c **** 					if(deltaL>threshold&&(WorkingImage[62-ii] - WorkingImage[61-ii])>threshold){
 388              		.loc 1 61 0
 389 0274 9C23     		mov	r3, #156
 390 0276 5B00     		lsl	r3, r3, #1
 391 0278 DB19     		add	r3, r3, r7
 392 027a 1A68     		ldr	r2, [r3]
 393 027c 9020     		mov	r0, #144
 394 027e 4000     		lsl	r0, r0, #1
 395 0280 C019     		add	r0, r0, r7
 396 0282 0368     		ldr	r3, [r0]
 397 0284 9A42     		cmp	r2, r3
 398 0286 00DC     		bgt	.LCB351
 399 0288 C9E0     		b	.L10	@long jump
 400              	.LCB351:
 401              		.loc 1 61 0 is_stmt 0
 402 028a 9E21     		mov	r1, #158
 403 028c 4900     		lsl	r1, r1, #1
 404 028e C919     		add	r1, r1, r7
 405 0290 0B68     		ldr	r3, [r1]
 406 0292 3E22     		mov	r2, #62
 407 0294 D21A     		sub	r2, r2, r3
 408 0296 324B     		ldr	r3, .L28+4
 409 0298 A020     		mov	r0, #160
 410 029a 4000     		lsl	r0, r0, #1
 411 029c C019     		add	r0, r0, r7
 412 029e C318     		add	r3, r0, r3
 413 02a0 5200     		lsl	r2, r2, #1
 414 02a2 D35A     		ldrh	r3, [r2, r3]
 415 02a4 1A1C     		mov	r2, r3
 416 02a6 9E21     		mov	r1, #158
 417 02a8 4900     		lsl	r1, r1, #1
 418 02aa C919     		add	r1, r1, r7
 419 02ac 0B68     		ldr	r3, [r1]
 420 02ae 3D21     		mov	r1, #61
 421 02b0 C91A     		sub	r1, r1, r3
 422 02b2 2B4B     		ldr	r3, .L28+4
 423 02b4 A020     		mov	r0, #160
 424 02b6 4000     		lsl	r0, r0, #1
 425 02b8 C019     		add	r0, r0, r7
 426 02ba C318     		add	r3, r0, r3
 427 02bc 4900     		lsl	r1, r1, #1
 428 02be CB5A     		ldrh	r3, [r1, r3]
 429 02c0 D21A     		sub	r2, r2, r3
 430 02c2 9021     		mov	r1, #144
 431 02c4 4900     		lsl	r1, r1, #1
 432 02c6 C919     		add	r1, r1, r7
 433 02c8 0B68     		ldr	r3, [r1]
 434 02ca 9A42     		cmp	r2, r3
 435 02cc 00DC     		bgt	.LCB385
 436 02ce A6E0     		b	.L10	@long jump
 437              	.LCB385:
  62:../sources/main.c **** 						//may need to change 3 should be lower than first thresh holdslope
  63:../sources/main.c **** 						while(deltaL>smallthreshold&&ii<=50){
 438              		.loc 1 63 0 is_stmt 1
 439 02d0 28E0     		b	.L11
 440              	.L13:
  64:../sources/main.c **** 							ii++;
 441              		.loc 1 64 0
 442 02d2 9E22     		mov	r2, #158
 443 02d4 5200     		lsl	r2, r2, #1
 444 02d6 D219     		add	r2, r2, r7
 445 02d8 1368     		ldr	r3, [r2]
 446 02da 0133     		add	r3, r3, #1
 447 02dc 9E20     		mov	r0, #158
 448 02de 4000     		lsl	r0, r0, #1
 449 02e0 C019     		add	r0, r0, r7
 450 02e2 0360     		str	r3, [r0]
  65:../sources/main.c **** 							deltaL = WorkingImage[63-ii] - WorkingImage[62-ii];
 451              		.loc 1 65 0
 452 02e4 9E21     		mov	r1, #158
 453 02e6 4900     		lsl	r1, r1, #1
 454 02e8 C919     		add	r1, r1, r7
 455 02ea 0B68     		ldr	r3, [r1]
 456 02ec 3F22     		mov	r2, #63
 457 02ee D21A     		sub	r2, r2, r3
 458 02f0 1B4B     		ldr	r3, .L28+4
 459 02f2 A020     		mov	r0, #160
 460 02f4 4000     		lsl	r0, r0, #1
 461 02f6 C019     		add	r0, r0, r7
 462 02f8 C318     		add	r3, r0, r3
 463 02fa 5200     		lsl	r2, r2, #1
 464 02fc D35A     		ldrh	r3, [r2, r3]
 465 02fe 1A1C     		mov	r2, r3
 466 0300 9E21     		mov	r1, #158
 467 0302 4900     		lsl	r1, r1, #1
 468 0304 C919     		add	r1, r1, r7
 469 0306 0B68     		ldr	r3, [r1]
 470 0308 3E21     		mov	r1, #62
 471 030a C91A     		sub	r1, r1, r3
 472 030c 144B     		ldr	r3, .L28+4
 473 030e A020     		mov	r0, #160
 474 0310 4000     		lsl	r0, r0, #1
 475 0312 C019     		add	r0, r0, r7
 476 0314 C318     		add	r3, r0, r3
 477 0316 4900     		lsl	r1, r1, #1
 478 0318 CB5A     		ldrh	r3, [r1, r3]
 479 031a D31A     		sub	r3, r2, r3
 480 031c 9C21     		mov	r1, #156
 481 031e 4900     		lsl	r1, r1, #1
 482 0320 C919     		add	r1, r1, r7
 483 0322 0B60     		str	r3, [r1]
 484              	.L11:
  63:../sources/main.c **** 						while(deltaL>smallthreshold&&ii<=50){
 485              		.loc 1 63 0
 486 0324 9C23     		mov	r3, #156
 487 0326 5B00     		lsl	r3, r3, #1
 488 0328 DB19     		add	r3, r3, r7
 489 032a 1A68     		ldr	r2, [r3]
 490 032c 8E20     		mov	r0, #142
 491 032e 4000     		lsl	r0, r0, #1
 492 0330 C019     		add	r0, r0, r7
 493 0332 0368     		ldr	r3, [r0]
 494 0334 9A42     		cmp	r2, r3
 495 0336 05DD     		ble	.L12
  63:../sources/main.c **** 						while(deltaL>smallthreshold&&ii<=50){
 496              		.loc 1 63 0 is_stmt 0
 497 0338 9E21     		mov	r1, #158
 498 033a 4900     		lsl	r1, r1, #1
 499 033c C919     		add	r1, r1, r7
 500 033e 0B68     		ldr	r3, [r1]
 501 0340 322B     		cmp	r3, #50
 502 0342 C6DD     		ble	.L13
 503              	.L12:
  66:../sources/main.c **** 						}
  67:../sources/main.c **** 						firstLevel = 63 - ii;
 504              		.loc 1 67 0 is_stmt 1
 505 0344 9E22     		mov	r2, #158
 506 0346 5200     		lsl	r2, r2, #1
 507 0348 D219     		add	r2, r2, r7
 508 034a 1368     		ldr	r3, [r2]
 509 034c 3F22     		mov	r2, #63
 510 034e D31A     		sub	r3, r2, r3
 511 0350 8420     		mov	r0, #132
 512 0352 4000     		lsl	r0, r0, #1
 513 0354 C019     		add	r0, r0, r7
 514 0356 0360     		str	r3, [r0]
  68:../sources/main.c **** 						while(deltaL<smallthreshold&&i<=50){
 515              		.loc 1 68 0
 516 0358 31E0     		b	.L14
 517              	.L29:
 518 035a C046     		.align	2
 519              	.L28:
 520 035c 00F10F40 		.word	1074786560
 521 0360 C0FEFFFF 		.word	-320
 522 0364 00000000 		.word	LineScanImageReady
 523 0368 00000000 		.word	LineScanImage0
 524              	.L16:
  69:../sources/main.c **** 							ii++;
 525              		.loc 1 69 0
 526 036c 9E21     		mov	r1, #158
 527 036e 4900     		lsl	r1, r1, #1
 528 0370 C919     		add	r1, r1, r7
 529 0372 0B68     		ldr	r3, [r1]
 530 0374 0133     		add	r3, r3, #1
 531 0376 9E22     		mov	r2, #158
 532 0378 5200     		lsl	r2, r2, #1
 533 037a D219     		add	r2, r2, r7
 534 037c 1360     		str	r3, [r2]
  70:../sources/main.c **** 							deltaL = WorkingImage[63-ii] - WorkingImage[62-ii];
 535              		.loc 1 70 0
 536 037e 9E20     		mov	r0, #158
 537 0380 4000     		lsl	r0, r0, #1
 538 0382 C019     		add	r0, r0, r7
 539 0384 0368     		ldr	r3, [r0]
 540 0386 3F22     		mov	r2, #63
 541 0388 D21A     		sub	r2, r2, r3
 542 038a 974B     		ldr	r3, .L30
 543 038c A021     		mov	r1, #160
 544 038e 4900     		lsl	r1, r1, #1
 545 0390 C919     		add	r1, r1, r7
 546 0392 CB18     		add	r3, r1, r3
 547 0394 5200     		lsl	r2, r2, #1
 548 0396 D35A     		ldrh	r3, [r2, r3]
 549 0398 1A1C     		mov	r2, r3
 550 039a 9E20     		mov	r0, #158
 551 039c 4000     		lsl	r0, r0, #1
 552 039e C019     		add	r0, r0, r7
 553 03a0 0368     		ldr	r3, [r0]
 554 03a2 3E21     		mov	r1, #62
 555 03a4 C91A     		sub	r1, r1, r3
 556 03a6 904B     		ldr	r3, .L30
 557 03a8 A020     		mov	r0, #160
 558 03aa 4000     		lsl	r0, r0, #1
 559 03ac C019     		add	r0, r0, r7
 560 03ae C318     		add	r3, r0, r3
 561 03b0 4900     		lsl	r1, r1, #1
 562 03b2 CB5A     		ldrh	r3, [r1, r3]
 563 03b4 D31A     		sub	r3, r2, r3
 564 03b6 9C21     		mov	r1, #156
 565 03b8 4900     		lsl	r1, r1, #1
 566 03ba C919     		add	r1, r1, r7
 567 03bc 0B60     		str	r3, [r1]
 568              	.L14:
  68:../sources/main.c **** 						while(deltaL<smallthreshold&&i<=50){
 569              		.loc 1 68 0
 570 03be 9C23     		mov	r3, #156
 571 03c0 5B00     		lsl	r3, r3, #1
 572 03c2 DB19     		add	r3, r3, r7
 573 03c4 1A68     		ldr	r2, [r3]
 574 03c6 8E20     		mov	r0, #142
 575 03c8 4000     		lsl	r0, r0, #1
 576 03ca C019     		add	r0, r0, r7
 577 03cc 0368     		ldr	r3, [r0]
 578 03ce 9A42     		cmp	r2, r3
 579 03d0 05DA     		bge	.L15
  68:../sources/main.c **** 						while(deltaL<smallthreshold&&i<=50){
 580              		.loc 1 68 0 is_stmt 0
 581 03d2 9421     		mov	r1, #148
 582 03d4 4900     		lsl	r1, r1, #1
 583 03d6 C919     		add	r1, r1, r7
 584 03d8 0B68     		ldr	r3, [r1]
 585 03da 322B     		cmp	r3, #50
 586 03dc C6D9     		bls	.L16
 587              	.L15:
  71:../sources/main.c **** 						}
  72:../sources/main.c **** 						secondLevel = 63 - ii;
 588              		.loc 1 72 0 is_stmt 1
 589 03de 9E22     		mov	r2, #158
 590 03e0 5200     		lsl	r2, r2, #1
 591 03e2 D219     		add	r2, r2, r7
 592 03e4 1368     		ldr	r3, [r2]
 593 03e6 3F22     		mov	r2, #63
 594 03e8 D31A     		sub	r3, r2, r3
 595 03ea 781D     		add	r0, r7, #5
 596 03ec FF30     		add	r0, r0, #255
 597 03ee 0360     		str	r3, [r0]
  73:../sources/main.c **** 						steeringAngle = (firstLevel + secondLevel)/2; 
 598              		.loc 1 73 0
 599 03f0 8421     		mov	r1, #132
 600 03f2 4900     		lsl	r1, r1, #1
 601 03f4 C919     		add	r1, r1, r7
 602 03f6 0A68     		ldr	r2, [r1]
 603 03f8 781D     		add	r0, r7, #5
 604 03fa FF30     		add	r0, r0, #255
 605 03fc 0368     		ldr	r3, [r0]
 606 03fe D318     		add	r3, r2, r3
 607 0400 002B     		cmp	r3, #0
 608 0402 00DA     		bge	.L17
 609 0404 0133     		add	r3, r3, #1
 610              	.L17:
 611 0406 5B10     		asr	r3, r3, #1
 612 0408 791C     		add	r1, r7, #1
 613 040a FF31     		add	r1, r1, #255
 614 040c 0B60     		str	r3, [r1]
  74:../sources/main.c **** 						TFC_SetServoLookup(steeringAngle-50);
 615              		.loc 1 74 0
 616 040e 7A1C     		add	r2, r7, #1
 617 0410 FF32     		add	r2, r2, #255
 618 0412 1368     		ldr	r3, [r2]
 619 0414 323B     		sub	r3, r3, #50
 620 0416 181C     		mov	r0, r3
 621 0418 FFF7FEFF 		bl	TFC_SetServoLookup
  75:../sources/main.c **** 						break;//don't check right side
 622              		.loc 1 75 0
 623 041c D9E0     		b	.L9
 624              	.L10:
  76:../sources/main.c **** 					
  77:../sources/main.c **** 					}
  78:../sources/main.c **** 					if(deltaR>threshold&&(WorkingImage[65+ii] - WorkingImage[66+ii])>threshold){
 625              		.loc 1 78 0
 626 041e 9A23     		mov	r3, #154
 627 0420 5B00     		lsl	r3, r3, #1
 628 0422 DB19     		add	r3, r3, r7
 629 0424 1A68     		ldr	r2, [r3]
 630 0426 9020     		mov	r0, #144
 631 0428 4000     		lsl	r0, r0, #1
 632 042a C019     		add	r0, r0, r7
 633 042c 0368     		ldr	r3, [r0]
 634 042e 9A42     		cmp	r2, r3
 635 0430 00DC     		bgt	.LCB578
 636 0432 BEE0     		b	.L18	@long jump
 637              	.LCB578:
 638              		.loc 1 78 0 is_stmt 0
 639 0434 9E21     		mov	r1, #158
 640 0436 4900     		lsl	r1, r1, #1
 641 0438 C919     		add	r1, r1, r7
 642 043a 0B68     		ldr	r3, [r1]
 643 043c 1A1C     		mov	r2, r3
 644 043e 4132     		add	r2, r2, #65
 645 0440 694B     		ldr	r3, .L30
 646 0442 A020     		mov	r0, #160
 647 0444 4000     		lsl	r0, r0, #1
 648 0446 C019     		add	r0, r0, r7
 649 0448 C318     		add	r3, r0, r3
 650 044a 5200     		lsl	r2, r2, #1
 651 044c D35A     		ldrh	r3, [r2, r3]
 652 044e 1A1C     		mov	r2, r3
 653 0450 9E21     		mov	r1, #158
 654 0452 4900     		lsl	r1, r1, #1
 655 0454 C919     		add	r1, r1, r7
 656 0456 0B68     		ldr	r3, [r1]
 657 0458 191C     		mov	r1, r3
 658 045a 4231     		add	r1, r1, #66
 659 045c 624B     		ldr	r3, .L30
 660 045e A020     		mov	r0, #160
 661 0460 4000     		lsl	r0, r0, #1
 662 0462 C019     		add	r0, r0, r7
 663 0464 C318     		add	r3, r0, r3
 664 0466 4900     		lsl	r1, r1, #1
 665 0468 CB5A     		ldrh	r3, [r1, r3]
 666 046a D21A     		sub	r2, r2, r3
 667 046c 9021     		mov	r1, #144
 668 046e 4900     		lsl	r1, r1, #1
 669 0470 C919     		add	r1, r1, r7
 670 0472 0B68     		ldr	r3, [r1]
 671 0474 9A42     		cmp	r2, r3
 672 0476 00DC     		bgt	.LCB612
 673 0478 9BE0     		b	.L18	@long jump
 674              	.LCB612:
  79:../sources/main.c **** 					//may need to change 3 should be lower than first thresh holdslope
  80:../sources/main.c **** 						while(deltaR>smallthreshold&&ii<=50){
 675              		.loc 1 80 0 is_stmt 1
 676 047a 28E0     		b	.L19
 677              	.L21:
  81:../sources/main.c **** 							ii++;
 678              		.loc 1 81 0
 679 047c 9E22     		mov	r2, #158
 680 047e 5200     		lsl	r2, r2, #1
 681 0480 D219     		add	r2, r2, r7
 682 0482 1368     		ldr	r3, [r2]
 683 0484 0133     		add	r3, r3, #1
 684 0486 9E20     		mov	r0, #158
 685 0488 4000     		lsl	r0, r0, #1
 686 048a C019     		add	r0, r0, r7
 687 048c 0360     		str	r3, [r0]
  82:../sources/main.c **** 							deltaR = WorkingImage[64+ii] - WorkingImage[65+ii];
 688              		.loc 1 82 0
 689 048e 9E21     		mov	r1, #158
 690 0490 4900     		lsl	r1, r1, #1
 691 0492 C919     		add	r1, r1, r7
 692 0494 0B68     		ldr	r3, [r1]
 693 0496 1A1C     		mov	r2, r3
 694 0498 4032     		add	r2, r2, #64
 695 049a 534B     		ldr	r3, .L30
 696 049c A020     		mov	r0, #160
 697 049e 4000     		lsl	r0, r0, #1
 698 04a0 C019     		add	r0, r0, r7
 699 04a2 C318     		add	r3, r0, r3
 700 04a4 5200     		lsl	r2, r2, #1
 701 04a6 D35A     		ldrh	r3, [r2, r3]
 702 04a8 1A1C     		mov	r2, r3
 703 04aa 9E21     		mov	r1, #158
 704 04ac 4900     		lsl	r1, r1, #1
 705 04ae C919     		add	r1, r1, r7
 706 04b0 0B68     		ldr	r3, [r1]
 707 04b2 191C     		mov	r1, r3
 708 04b4 4131     		add	r1, r1, #65
 709 04b6 4C4B     		ldr	r3, .L30
 710 04b8 A020     		mov	r0, #160
 711 04ba 4000     		lsl	r0, r0, #1
 712 04bc C019     		add	r0, r0, r7
 713 04be C318     		add	r3, r0, r3
 714 04c0 4900     		lsl	r1, r1, #1
 715 04c2 CB5A     		ldrh	r3, [r1, r3]
 716 04c4 D31A     		sub	r3, r2, r3
 717 04c6 9A21     		mov	r1, #154
 718 04c8 4900     		lsl	r1, r1, #1
 719 04ca C919     		add	r1, r1, r7
 720 04cc 0B60     		str	r3, [r1]
 721              	.L19:
  80:../sources/main.c **** 						while(deltaR>smallthreshold&&ii<=50){
 722              		.loc 1 80 0
 723 04ce 9A23     		mov	r3, #154
 724 04d0 5B00     		lsl	r3, r3, #1
 725 04d2 DB19     		add	r3, r3, r7
 726 04d4 1A68     		ldr	r2, [r3]
 727 04d6 8E20     		mov	r0, #142
 728 04d8 4000     		lsl	r0, r0, #1
 729 04da C019     		add	r0, r0, r7
 730 04dc 0368     		ldr	r3, [r0]
 731 04de 9A42     		cmp	r2, r3
 732 04e0 05DD     		ble	.L20
  80:../sources/main.c **** 						while(deltaR>smallthreshold&&ii<=50){
 733              		.loc 1 80 0 is_stmt 0
 734 04e2 9E21     		mov	r1, #158
 735 04e4 4900     		lsl	r1, r1, #1
 736 04e6 C919     		add	r1, r1, r7
 737 04e8 0B68     		ldr	r3, [r1]
 738 04ea 322B     		cmp	r3, #50
 739 04ec C6DD     		ble	.L21
 740              	.L20:
  83:../sources/main.c **** 						}
  84:../sources/main.c **** 						firstLevel = 64 + ii;
 741              		.loc 1 84 0 is_stmt 1
 742 04ee 9E22     		mov	r2, #158
 743 04f0 5200     		lsl	r2, r2, #1
 744 04f2 D219     		add	r2, r2, r7
 745 04f4 1368     		ldr	r3, [r2]
 746 04f6 4033     		add	r3, r3, #64
 747 04f8 8420     		mov	r0, #132
 748 04fa 4000     		lsl	r0, r0, #1
 749 04fc C019     		add	r0, r0, r7
 750 04fe 0360     		str	r3, [r0]
  85:../sources/main.c **** 						while(deltaL<smallthreshold&&ii<=50){
 751              		.loc 1 85 0
 752 0500 28E0     		b	.L22
 753              	.L24:
  86:../sources/main.c **** 							ii++;
 754              		.loc 1 86 0
 755 0502 9E21     		mov	r1, #158
 756 0504 4900     		lsl	r1, r1, #1
 757 0506 C919     		add	r1, r1, r7
 758 0508 0B68     		ldr	r3, [r1]
 759 050a 0133     		add	r3, r3, #1
 760 050c 9E22     		mov	r2, #158
 761 050e 5200     		lsl	r2, r2, #1
 762 0510 D219     		add	r2, r2, r7
 763 0512 1360     		str	r3, [r2]
  87:../sources/main.c **** 							deltaR = WorkingImage[64+ii] - WorkingImage[65+ii];
 764              		.loc 1 87 0
 765 0514 9E20     		mov	r0, #158
 766 0516 4000     		lsl	r0, r0, #1
 767 0518 C019     		add	r0, r0, r7
 768 051a 0368     		ldr	r3, [r0]
 769 051c 1A1C     		mov	r2, r3
 770 051e 4032     		add	r2, r2, #64
 771 0520 314B     		ldr	r3, .L30
 772 0522 A021     		mov	r1, #160
 773 0524 4900     		lsl	r1, r1, #1
 774 0526 C919     		add	r1, r1, r7
 775 0528 CB18     		add	r3, r1, r3
 776 052a 5200     		lsl	r2, r2, #1
 777 052c D35A     		ldrh	r3, [r2, r3]
 778 052e 1A1C     		mov	r2, r3
 779 0530 9E20     		mov	r0, #158
 780 0532 4000     		lsl	r0, r0, #1
 781 0534 C019     		add	r0, r0, r7
 782 0536 0368     		ldr	r3, [r0]
 783 0538 191C     		mov	r1, r3
 784 053a 4131     		add	r1, r1, #65
 785 053c 2A4B     		ldr	r3, .L30
 786 053e A020     		mov	r0, #160
 787 0540 4000     		lsl	r0, r0, #1
 788 0542 C019     		add	r0, r0, r7
 789 0544 C318     		add	r3, r0, r3
 790 0546 4900     		lsl	r1, r1, #1
 791 0548 CB5A     		ldrh	r3, [r1, r3]
 792 054a D31A     		sub	r3, r2, r3
 793 054c 9A21     		mov	r1, #154
 794 054e 4900     		lsl	r1, r1, #1
 795 0550 C919     		add	r1, r1, r7
 796 0552 0B60     		str	r3, [r1]
 797              	.L22:
  85:../sources/main.c **** 						while(deltaL<smallthreshold&&ii<=50){
 798              		.loc 1 85 0
 799 0554 9C23     		mov	r3, #156
 800 0556 5B00     		lsl	r3, r3, #1
 801 0558 DB19     		add	r3, r3, r7
 802 055a 1A68     		ldr	r2, [r3]
 803 055c 8E20     		mov	r0, #142
 804 055e 4000     		lsl	r0, r0, #1
 805 0560 C019     		add	r0, r0, r7
 806 0562 0368     		ldr	r3, [r0]
 807 0564 9A42     		cmp	r2, r3
 808 0566 05DA     		bge	.L23
  85:../sources/main.c **** 						while(deltaL<smallthreshold&&ii<=50){
 809              		.loc 1 85 0 is_stmt 0
 810 0568 9E21     		mov	r1, #158
 811 056a 4900     		lsl	r1, r1, #1
 812 056c C919     		add	r1, r1, r7
 813 056e 0B68     		ldr	r3, [r1]
 814 0570 322B     		cmp	r3, #50
 815 0572 C6DD     		ble	.L24
 816              	.L23:
  88:../sources/main.c **** 						}
  89:../sources/main.c **** 							secondLevel = 64 + ii;
 817              		.loc 1 89 0 is_stmt 1
 818 0574 9E22     		mov	r2, #158
 819 0576 5200     		lsl	r2, r2, #1
 820 0578 D219     		add	r2, r2, r7
 821 057a 1368     		ldr	r3, [r2]
 822 057c 4033     		add	r3, r3, #64
 823 057e 781D     		add	r0, r7, #5
 824 0580 FF30     		add	r0, r0, #255
 825 0582 0360     		str	r3, [r0]
  90:../sources/main.c **** 							steeringAngle = (firstLevel + secondLevel)/2; 
 826              		.loc 1 90 0
 827 0584 8421     		mov	r1, #132
 828 0586 4900     		lsl	r1, r1, #1
 829 0588 C919     		add	r1, r1, r7
 830 058a 0A68     		ldr	r2, [r1]
 831 058c 781D     		add	r0, r7, #5
 832 058e FF30     		add	r0, r0, #255
 833 0590 0368     		ldr	r3, [r0]
 834 0592 D318     		add	r3, r2, r3
 835 0594 002B     		cmp	r3, #0
 836 0596 00DA     		bge	.L25
 837 0598 0133     		add	r3, r3, #1
 838              	.L25:
 839 059a 5B10     		asr	r3, r3, #1
 840 059c 791C     		add	r1, r7, #1
 841 059e FF31     		add	r1, r1, #255
 842 05a0 0B60     		str	r3, [r1]
  91:../sources/main.c **** 							TFC_SetServoLookup(steeringAngle-50);
 843              		.loc 1 91 0
 844 05a2 7A1C     		add	r2, r7, #1
 845 05a4 FF32     		add	r2, r2, #255
 846 05a6 1368     		ldr	r3, [r2]
 847 05a8 323B     		sub	r3, r3, #50
 848 05aa 181C     		mov	r0, r3
 849 05ac FFF7FEFF 		bl	TFC_SetServoLookup
  92:../sources/main.c **** 							break; //don't check anymore bits				
 850              		.loc 1 92 0
 851 05b0 0FE0     		b	.L9
 852              	.L18:
  45:../sources/main.c **** 				for(;ii<=50; ii++){
 853              		.loc 1 45 0
 854 05b2 9E20     		mov	r0, #158
 855 05b4 4000     		lsl	r0, r0, #1
 856 05b6 C019     		add	r0, r0, r7
 857 05b8 0368     		ldr	r3, [r0]
 858 05ba 0133     		add	r3, r3, #1
 859 05bc 9E21     		mov	r1, #158
 860 05be 4900     		lsl	r1, r1, #1
 861 05c0 C919     		add	r1, r1, r7
 862 05c2 0B60     		str	r3, [r1]
 863              	.L6:
  45:../sources/main.c **** 				for(;ii<=50; ii++){
 864              		.loc 1 45 0 is_stmt 0
 865 05c4 9E22     		mov	r2, #158
 866 05c6 5200     		lsl	r2, r2, #1
 867 05c8 D219     		add	r2, r2, r7
 868 05ca 1368     		ldr	r3, [r2]
 869 05cc 322B     		cmp	r3, #50
 870 05ce 00DC     		bgt	.LCB801
 871 05d0 AEE5     		b	.L26	@long jump
 872              	.LCB801:
 873              	.L9:
  93:../sources/main.c **** 										
  94:../sources/main.c **** 						}
  95:../sources/main.c **** 				}
  96:../sources/main.c **** 				steeringAngle = 0;//if passes a horizontal line
 874              		.loc 1 96 0 is_stmt 1
 875 05d2 0023     		mov	r3, #0
 876 05d4 781C     		add	r0, r7, #1
 877 05d6 FF30     		add	r0, r0, #255
 878 05d8 0360     		str	r3, [r0]
  97:../sources/main.c **** 				TFC_SetServoLookup(steeringAngle); // straight line to servos
 879              		.loc 1 97 0
 880 05da 791C     		add	r1, r7, #1
 881 05dc FF31     		add	r1, r1, #255
 882 05de 0B68     		ldr	r3, [r1]
 883 05e0 181C     		mov	r0, r3
 884 05e2 FFF7FEFF 		bl	TFC_SetServoLookup
 885              	.LBE2:
  98:../sources/main.c **** 				
  99:../sources/main.c **** 				
 100:../sources/main.c **** 				
 101:../sources/main.c **** 				
 102:../sources/main.c **** 				break;
 103:../sources/main.c **** 			}
 104:../sources/main.c **** 	}
 886              		.loc 1 104 0
 887 05e6 3BE5     		b	.L27
 888              	.L31:
 889              		.align	2
 890              	.L30:
 891 05e8 C0FEFFFF 		.word	-320
 892              		.cfi_endproc
 893              	.LFE0:
 895              		.text
 896              	.Letext0:
 897              		.file 2 "C:/Freescale/CW MCU v10.5/MCU/ARM_GCC_Support/ewl/EWL_C/include/cstdint"
 898              		.file 3 "H:/CWorkspace/freescale-line/Project_Headers/MKL25Z4.h"
 899              		.file 4 "H:/CWorkspace/freescale-line/Project_Headers/TFC\\TFC_LineScanCamera.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\ERIKJO~1\AppData\Local\Temp\cc7OzjVZ.s:18     .text.main:00000000 $t
C:\Users\ERIKJO~1\AppData\Local\Temp\cc7OzjVZ.s:23     .text.main:00000000 main
C:\Users\ERIKJO~1\AppData\Local\Temp\cc7OzjVZ.s:520    .text.main:0000035c $d
C:\Users\ERIKJO~1\AppData\Local\Temp\cc7OzjVZ.s:526    .text.main:0000036c $t
C:\Users\ERIKJO~1\AppData\Local\Temp\cc7OzjVZ.s:891    .text.main:000005e8 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
TFC_Init
TFC_SetPWMLookup
TFC_Task
TFC_GetDIP_Switch
memset
TFC_SetServoLookup
LineScanImageReady
LineScanImage0
